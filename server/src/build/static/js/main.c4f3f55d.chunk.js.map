{"version":3,"sources":["pageComponents/Home/Footer.js","constants/routes.js","apollo/queries/local/index.js","reactStrapComponent/Navbar.js","reactStrapComponent/Carousel.js","pageComponents/Home/Offerings.js","pageComponents/Home/About.js","pages/Home.js","hooks/useInput.js","apollo/mutation/signup.js","constants/localsaves.js","pageComponents/Signup/SignupForm.js","pages/SignUp.js","apollo/mutation/signin.js","pageComponents/SignIn/SigninForm.js","pages/SignIn.js","apollo/mutation/createBook.js","pageComponents/dashboard/UploadForm.js","apollo/queries/books.js","pageComponents/Books/BookItem.js","pageComponents/Books/BooksList.js","pageComponents/dashboard/NavVertical.js","pages/Dashboard.js","pages/Books.js","auth/PrivateRoute.js","Router.js","layouts/Main.js","App.js","serviceWorker.js","apollo/resolvers/index.js","apollo/configure.js","index.js","hqwordsLogo.png","images/banner/hqwords-coffee-h570.jpg","images/banner/hqwords-books-571.jpg"],"names":["Footer","react_default","a","createElement","className","LANDING","SIGN_UP","SIGN_IN","BOOKS","DASHBOARD","IS_LOGGED_IN","gql","_templateObject","MyNavbar","props","_useState","useState","_useState2","Object","slicedToArray","isOpen","toggle","Navbar","light","expand","NavbarBrand","tag","NLink","to","src","logo","alt","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","href","data","useQuery","console","log","isLoggedIn","IsLoggedIn","items","banner2","altText","caption","header","banner1","Example","UncontrolledCarousel","Offerings","About","react_router_dom","Home","Fragment","Carousel","useInput","value","setValue","onChange","e","target","signup_templateObject","APP_NAMESPACE","SignupForm","email","password","fname","lname","formValues","setFormValues","_useMutation","useMutation","SIGNUP","_useMutation2","signup","_useMutation2$","loading","error","token","toSave","JSON","stringify","objectSpread","window","localStorage","setItem","concat","constants","history","push","pathname","routes","state","user","htmlFor","assign","type","id","placeholder","aria-describedby","message","fullName","variables","SignUp","signin_templateObject","SIGNIN","login","useEffect","SigninForm_SignupForm","createBook_templateObject","UploadForm","title","description","price","authorName","_useState3","_useState4","selectedFile","setSelectedFile","CREATEBOOK","createBook","onSubmit","_ref","asyncToGenerator","regenerator_default","mark","_callee","formData","res","_formValues","wrap","_context","prev","next","FormData","append","axios","post","sent","t0","public_id","artwork","secure_url","stop","_x","apply","this","arguments","name","files","multiple","GET_BOOKS","books_templateObject","GET_USER_BOOKS","_templateObject2","BookItem","book","_id","style","maxWidth","BooksList","listQuery","listTitle","theQuery","_useQuery","loadedLis","books","map","key","length","NavVertical","match","path","url","exact","sidebar","role","aria-labelledby","main","aria-orientation","data-toggle","aria-controls","aria-selected","react_router","route","index","component","Dashboard","location","result","fullResult","Books","PrivateRoute","Component","rest","objectWithoutProperties","render","App","SignUpPage","SignInPage","BooksPage","PrivateRoute_PrivateRoute","MainLayout","Router","Boolean","hostname","typeDefs","resolvers_templateObject","cache","InMemoryCache","userStringified","getItem","userLocal","parse","link","HttpLink","uri","headers","authorization","writeData","client","ApolloClient","resolvers","configure","ReactDOM","react_common_esm","apollo","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.c4f3f55d.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Footer() {\n    return (\n        <footer className=\"container-fluid y-footer  p-3 p-md-5\">\n            <div className=\"row \">\n                <div className=\"col-sm y-vision\">\n                    <h3> Vision</h3>\n                    <p>\n                        The vision of HQwords is to inspire healthy living through\n                        creativity and entertainment.\n                    </p>\n                </div>\n                <div className=\"col-sm y-vision\">\n                    <h3> Mission</h3>\n                    <p>\n                        Our mission is to promote positive expressions through creativity and\n                        entertainment, encouraging open-mindedness and inquiry in areas of\n                        life and human relations, and respect for individual beliefs.\n                    </p>\n                </div>\n            </div>\n            <div className=\"y-copyright\">\n                <p>&copy; 2019 HQ Words</p>\n            </div>\n        </footer>\n    )\n}\n","export const LANDING = '/';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/signin';\nexport const HOME = '/home';\nexport const BOOKS = '/books';\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const DASHBOARD = '/dashboard';\nexport const PASSWORD_FORGET = '/pw-forget';","import gql from \"graphql-tag\";\n\nexport const IS_LOGGED_IN = gql`\n  query IsUserLoggedIn {\n    isLoggedIn @client\n  }\n`;\n","import React, {useState} from 'react';\nimport { NavLink as NLink } from 'react-router-dom'\nimport { useQuery } from '@apollo/react-hooks';\n\nimport {\n    Collapse, Navbar, NavbarToggler, NavbarBrand, Nav,\n    NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu,\n    DropdownItem\n} from 'reactstrap';\n\nimport { BOOKS, LANDING, SIGN_IN, DASHBOARD } from '../constants/routes'\nimport { IS_LOGGED_IN} from '../apollo/queries/local';\n\n\nimport logo from '../hqwordsLogo.png'\nimport '../styles/nav.css';\n\nfunction IsLoggedIn() {\n    const { data } = useQuery(IS_LOGGED_IN);\n    console.log('data.isLoggedIn: ', data.isLoggedIn);\n    return data.isLoggedIn ? <NavLink tag={NLink} to={DASHBOARD}> My Account</NavLink> : \n    <NavLink tag={NLink} to={SIGN_IN}>Login / Register</NavLink>;\n}\n\nexport default function MyNavbar(props) {\n    const [isOpen, toggle] = useState(false);\n    \n    const doToggle = () => {\n        toggle(!isOpen)\n    }\n    \n        return (\n            <div className=\"y-navbar\">\n                <Navbar light expand=\"md\">\n                    <NavbarBrand tag={NLink} to={LANDING}>\n                        <img src={logo} alt='hqwords logo' className='app-logo' />\n                    </NavbarBrand>\n                    <NavbarToggler onClick={doToggle} />\n                    <Collapse isOpen={isOpen} navbar>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink tag={NLink} to={LANDING}>Home</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href=\"#/about-us/\">About Us</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink tag={NLink} to={BOOKS}>Our Products</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink href=\"#/services/\">Our Services</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                {IsLoggedIn()}\n                            </NavItem>\n\n\n                            {/* <UncontrolledDropdown nav inNavbar>\n                                <DropdownToggle nav caret>\n                                    Options\n                                </DropdownToggle>\n                                <DropdownMenu right>\n                                    <DropdownItem>\n                                        Option 1\n                                </DropdownItem>\n                                    <DropdownItem>\n                                        Option 2\n                                    </DropdownItem>\n                                    <DropdownItem divider />\n                                    <DropdownItem>\n                                        Reset\n                                    </DropdownItem>\n                                </DropdownMenu>\n                            </UncontrolledDropdown> */}\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        );\n    \n}","import React from 'react';\nimport { UncontrolledCarousel } from 'reactstrap';\nimport banner1 from '../images/banner/hqwords-coffee-h570.jpg';\nimport banner2 from '../images/banner/hqwords-books-571.jpg';\n//import banner3 from '../images/banner/hqwords-dairy-572.jpg';\n\nimport '../styles/carousel.css';\n\nconst items = [\n    {\n        src: banner2,\n        altText: 'inspiration',\n        caption: 'Feel the power of expressions',\n        header: 'Books from Amazing Authors'\n    },\n    {\n        src: banner1,\n        altText: 'publicity',\n        caption: 'Let your voice be heard',\n        header: 'Publicity for your Creativity'\n    },\n];\n\nconst Example = () => <UncontrolledCarousel items={items} />;\n\nexport default Example;","import React from 'react'\n\nexport default function Offerings() {\n    return (\n        <section className=\"container y-offerings p-3 p-md-5\">\n            <h1 className=\"text-center\"> What We Are Offering </h1>\n            <div className=\"row \">\n                <div className=\"col-sm y-offering-item\">\n                    <p><i className=\"yfont icofont-learn\"></i></p>\n                    <div className=\"y-offering-item-content\">\n                        <h2> Inspiring Poems</h2>\n                        <p>A collection of poems about life, love and God</p>\n                    </div>\n                </div>\n                <div className=\"col-sm y-offering-item\">\n                    <p><i className=\"yfont icofont-fountain-pen\"></i></p>\n                    <div className=\"y-offering-item-content\">\n                        <h2> Creative Writing</h2>\n                        <p>Thought provoking articles. And training in creative writing</p>\n                    </div>\n                </div>\n                <div className=\"col-sm y-offering-item\">\n                    <p><i className=\"yfont icofont-read-book\"></i></p>\n                    <div className=\"y-offering-item-content\">\n                        <h2> Book Art and Posters</h2>\n                        <p>Let's create cool book arts and posters for your books and creative writings</p>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { SIGN_UP, BOOKS } from '../../constants/routes'\n\nexport default function About() {\n    return (\n        <section className=\"container-fluid y-about px-3 px-md-5 py-5\">\n            <h1 className=\"y-section-heading\"> HQWords  </h1>\n            <p className=\"y-subheading\">( Power of Expression & Creativity )</p>\n            <div className=\"row \">\n                <div className=\"col-sm y-about-summary\">\n                    <h5>Read</h5>\n                    <p> We bring you beautiful words from amazing authors. </p>\n                    <p>Every author is vetted. And we only accept their best works</p>\n                    <p>\n                        <Link to={BOOKS}>\n                            <button className=\"btn btn-primary\" >View Books</button>\n                        </Link>\n                    </p>\n                </div>\n                <div className=\"col-sm y-about-summary\">\n                    <h5>Write</h5>\n                    <p> Join our amazing authors now and get more publicity for you creativity.</p>\n                    <p> Our readers can't wait read your masterpiece. Don't keep them waiting</p>\n                    <p>\n                        <Link to={SIGN_UP}>\n                            <button className=\"btn btn-primary\" >Sign up Now</button>\n                        </Link>\n                    </p>\n                </div>\n\n                {/* <div className=\"col-sm y-about-image\">\n                </div> */}\n            </div>\n        </section>\n    )\n}\n","import React from 'react';\nimport '../styles/main.css'\n\nimport Navbar from '../reactStrapComponent/Navbar';\nimport Carousel from '../reactStrapComponent/Carousel';\nimport Offerings from '../pageComponents/Home/Offerings';\nimport About from '../pageComponents/Home/About';\nimport Footer from '../pageComponents/Home/Footer';\n\nexport default function Home() {\n    return (\n        <>\n            <Navbar />\n            <Carousel />\n            <div className=\"y-afterheader\">\n                <Offerings />\n                <About />\n                {/* <Footer /> */}\n            </div>\n        </>\n    )\n}\n","import React, { useState } from 'react';\nexport function useInput() {\n    const [value, setValue] = useState('');\n    const onChange = (e) => {\n        setValue(e.target.value);\n    }\n    return {\n        onChange,\n        value,\n    }\n}","import gql from \"graphql-tag\";\n\nexport default gql`\n  mutation signup($fullName: String!, $email: String!, $password: String!) {\n        signup(fullName: $fullName, email: $email, password: $password){\n            token\n            }\n      }\n`;","export const APP_NAMESPACE = 'hqwords'\n","import React, { useEffect, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks'\n\nimport { useInput } from '../../hooks/useInput';\nimport SIGNUP from '../../apollo/mutation/signup';\nimport * as routes from '../../constants/routes';\nimport * as constants from '../../constants/localsaves';\nexport default function SignupForm(props) {\n    const email = useInput();\n    const password = useInput();\n    const fname = useInput();\n    const lname = useInput();\n    const [formValues, setFormValues] = useState(null)\n\n    const [signup, { data, loading, error }] = useMutation(SIGNUP);\n\n    // useEffect(() => {\n    //     window.localStorage.setItem('hqwords:user', { ...formValues, token });\n    //     console.log('stored user: ', { ...formValues, token })\n    //     if (done) {\n    //         props.history.push({\n    //             pathname: '/dashboard',\n    //             state: { user: formValues }\n    //         })\n    //     }\n\n    // }, [done, formValues, token, props.history])\n\n\n    const onSubmit = (e) => {\n        let formValues = {\n            fullName: `${fname.value} ${lname.value}`,\n            email: email.value, password: password.value\n        }\n        console.log('all: ', formValues)\n        setFormValues(formValues)\n        signup({ variables: formValues });\n\n\n    }\n    if (data) {\n        console.log('success: ', data);\n        console.log('data.signup.token: ', data.signup.token)\n        let token = data.signup.token;\n        let toSave = JSON.stringify({ ...formValues, token })\n        window.localStorage.setItem(`${constants.APP_NAMESPACE}:user`, toSave);\n        props.history.push({\n            pathname: routes.DASHBOARD,\n            state: { user: formValues }\n        })\n\n    }\n    if (error) {\n        console.log('error: ', error);\n    }\n    return (\n        <div className=\"y-signupform\">\n            <form>\n                <fieldset>\n                    <legend>\n                        1000s of readers await you, sign up now and start writing\n                    </legend>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"fname\">First Name</label>\n                        <input type=\"text\" className=\"form-control\" id=\"fname\"\n                            {...fname}\n                            placeholder=\"Your first name\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"lname\">Last Name</label>\n                        <input type=\"text\" className=\"form-control\" id=\"fname\"\n                            {...lname}\n                            placeholder=\"Last name\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email address</label>\n                        <input type=\"email\" className=\"form-control\"\n                            {...email}\n                            id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\n\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" className=\"form-control\"\n                            {...password}\n                            id=\"password\" placeholder=\"Password\" />\n                    </div>\n                    {loading ? (<p>... signing you up ...</p>) : (error ? error.message : '')}\n                    <button type=\"button\"\n                        onClick={onSubmit}\n                        className=\"btn btn-primary\">Submit</button>\n\n\n\n                </fieldset>\n            </form>\n        </div>\n    )\n}","import React from 'react';\n\nimport SignupForm from '../pageComponents/Signup/SignupForm';\n\nimport '../styles/signup.css';\n\nimport Navbar from '../reactStrapComponent/Navbar';\n\n\nexport default function SignUp(props) {\n    return (\n        <>\n            <Navbar />\n            <div className=\" container px-3 py-5 y-signupform\">\n                <SignupForm history={props.history} />\n            </div>\n        </>\n    )\n}","import gql from \"graphql-tag\";\n\nexport default gql`\n  mutation login($email: String!, $password: String!) {\n        login(email: $email, password: $password){\n            token\n            }\n      }\n`;","import React, { useEffect, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks'\n\nimport { Link, NavLink as RLink, Route } from 'react-router-dom'\n\n\nimport { useInput } from '../../hooks/useInput';\nimport SIGNIN from '../../apollo/mutation/signin';\nimport * as routes from '../../constants/routes';\nimport * as constants from '../../constants/localsaves';\nexport default function SignupForm(props) {\n    const email = useInput();\n    const password = useInput();\n    const [formValues, setFormValues] = useState(null)\n\n    const [login, { data, loading, error }] = useMutation(SIGNIN);\n\n    // useEffect(() => {\n    //     window.localStorage.setItem('hqwords:user', { ...formValues, token });\n    //     console.log('stored user: ', { ...formValues, token })\n    //     if (done) {\n    //         props.history.push({\n    //             pathname: '/dashboard',\n    //             state: { user: formValues }\n    //         })\n    //     }\n\n    // }, [done, formValues, token, props.history])\n\n    useEffect(() => {\n        if (data) {\n            console.log('success: ', data);\n            console.log('data.login.token: ', data.login.token)\n            let token = data.login.token;\n            let toSave = JSON.stringify({ email: formValues.email, token })\n            window.localStorage.setItem(`${constants.APP_NAMESPACE}:user`, toSave);\n            props.history.push({\n                pathname: routes.DASHBOARD,\n                state: { user: {email: formValues.email, token} }\n            })\n    \n        }\n        if (error) {\n            console.log('error: ', error);\n        }\n    },[data])\n\n\n    const onSubmit = (e) => {\n        let formValues = {\n            email: email.value, password: password.value\n        }\n        console.log('all: ', formValues)\n        setFormValues(formValues)\n        login({ variables: formValues });\n\n    }\n\n    return (\n        <div className=\"y-signupform\">\n            <form>\n                <fieldset>\n                    <legend>\n                        Sign in and write something awesome\n                    </legend>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email address</label>\n                        <input type=\"email\" className=\"form-control\"\n                            {...email}\n                            id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\n\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" className=\"form-control\"\n                            {...password}\n                            id=\"password\" placeholder=\"Password\" />\n                    </div>\n                    {loading ? (<p>... logging you in ...</p>) : (error ? error.message : '')}\n                    <button type=\"button\"\n                        onClick={onSubmit}\n                        className=\"btn btn-primary\">Log in\n                    </button>\n                    <p>Not a member yet? <Link to={routes.SIGN_UP} >Sign up now</Link></p>\n                </fieldset>\n            </form>\n        </div>\n    )\n}","import React from 'react';\n\nimport SigninForm from '../pageComponents/SignIn/SigninForm';\n\nimport '../styles/signup.css';\n\nimport Navbar from '../reactStrapComponent/Navbar';\n\n\nexport default function SignUp(props) {\n    return (\n        <>\n            <Navbar />\n            <div className=\" container px-3 py-5 y-signupform\">\n                <SigninForm history={props.history} />\n            </div>\n        </>\n    )\n}","import gql from \"graphql-tag\";\n\nexport default gql`\n  mutation createBook($title: String!, $description: String!, \n  $artwork: String, $price: String, $authorName: String) {\n        createBook(input: {\n          title:$title, description: $description, \n          artwork: $artwork, price: $price, authorName: $authorName})\n    {\n            title, description, artwork, price, authorName}\n    }\n`;","import React, { useEffect, useState } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport CREATEBOOK from '../../apollo/mutation/createBook';\n\nimport axios from 'axios';\n\nimport { useInput } from '../../hooks/useInput';\n\nexport default function UploadForm(props) {\n    const email = useInput();\n    const password = useInput();\n    const title = useInput();\n    const description = useInput();\n    const price = useInput();\n    const authorName = useInput();\n    const artwork = useInput();\n    const [formValues, setFormValues] = useState(null)\n    const [selectedFile, setSelectedFile] = useState(null)\n\n    const [createBook, { data, loading, error }] = useMutation(CREATEBOOK);\n\n    const onSubmit = async (e) => {\n\n        const formData = new FormData()\n        formData.append('file', selectedFile);\n        formData.append('upload_preset', 'vybxxhez')\n        let res\n        try {\n            res = await axios.post('https://api.cloudinary.com/v1_1/ls8e0q6mx/image/upload', formData)\n            console.log('res: ', res);\n        } catch (error) {\n            console.log('error uploading: ', error);\n        }\n        if (res.data.public_id) {\n            console.log('res.formData.public_id: ', res.data.public_id);\n\n            let formValues = {\n                title: title.value, description: description.value,\n                artwork: res.data.secure_url,\n                price: price.value, authorName: authorName.value\n            }\n            console.log('all: ', formValues)\n\n            setFormValues(formValues)\n\n            createBook({ variables: formValues });\n        }\n        else {\n            console.log('no res.data.public_id ... image not uploaded ')\n        }\n    }\n\n    const onFileChange = (e) => {\n        console.log('e.target.files[0]: ', e.target.files[0]);\n        setSelectedFile(e.target.files[0]);\n\n    }\n\n    if (data) {\n        console.log('success: ', data);\n    }\n    if (error) {\n        console.log('error: ', error);\n    }\n\n    return (\n        <div className=\"container y-signupform\">\n            <form>\n                <fieldset>\n                    <legend>\n                        Upload your book, readers are waiting\n                    </legend>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"title\">Book Title</label>\n                        <input type=\"text\" className=\"form-control\" id=\"title\"\n                            {...title}\n                            placeholder=\"The book title\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"title\">Price</label>\n                        <input type=\"text\" className=\"form-control\" id=\"price\"\n                            {...price}\n                            placeholder=\"Price\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"title\">Author Name</label>\n                        <input type=\"text\" className=\"form-control\" id=\"authorName\"\n                            {...authorName}\n                            placeholder=\"Author Name\" />\n                    </div>\n\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"description\">Description</label>\n                        <input type=\"text\" className=\"form-control\" id=\"description\"\n                            {...description}\n                            placeholder=\"Description\" />\n                    </div>\n\n                    <div className=\"form-group files\">\n                        <label>Upload Book image </label>\n                        <input type=\"file\" name=\"file\"\n                            onChange={onFileChange}\n                            className=\"form-control\" multiple=\"\" />\n                    </div>\n                    {loading ? (<p>... uploading book ...</p>) : (error ? error.message : '')}\n\n                    <button type=\"button\"\n                        onClick={onSubmit}\n                        className=\"btn btn-primary\">Submit\n                    </button>\n\n                </fieldset>\n            </form>\n        </div>\n    )\n}","import gql from \"graphql-tag\";\n\nexport const GET_BOOKS = gql`\n    query books {   \n        books {\n            _id, title, description, authorName, price, artwork\n        }  \n    }   \n`\n;\n\nexport const GET_USER_BOOKS = gql`\n    query books {   \n        books {\n            _id, title, description, authorName, price, artwork,\n            author{\n                username\n                lastName\n                firstName\n              }\n        }  \n    }   \n`\n;","import React from 'react';\n\nexport default function BookItem({ book }) {\n    let { _id, title, description, artwork, authorName, price } = book;\n\n    return (\n        <div className=\"card mb-3\" style={{ \"maxWidth\": \"540px\" }}>\n            <div className=\"row no-gutters\">\n                <div className=\"col-md-4\">\n                    <img src={artwork} className=\"card-img\" alt={title} />\n                </div>\n                <div className=\"col-md-8\">\n                    <div className=\"card-body y-cardbody\">\n                        <h5 className=\"card-title\">{title}</h5>\n                        <p className=\"card-text\">{description}</p>\n                        <p className=\"card-text\">{authorName}</p>\n                        <p className=\"card-text\"><small className=\"text-muted\">&#8358;{price}</small></p>\n\n                        <button className=\"btn btn-primary\" > Buy Now </button>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_BOOKS, GET_USER_BOOKS } from '../../apollo/queries/books';\n\nimport BookItem from './BookItem';\n\nexport default function BooksList({listQuery, listTitle}) {\n    let theQuery = listQuery? listQuery: GET_BOOKS;\n    const { data, loading, error } = useQuery(theQuery);\n    if (loading) {\n        return (<p> loading .... </p>)\n    }\n    else {\n        if (error) {\n            console.log('error: ', error);\n            return (<p> Error loading books: {error.message} </p>)\n        }\n        else {\n\n            let loadedLis = data && data.books.map((book) => (\n                <BookItem book={book} key={book._id} _id={book._id} />\n            ))\n\n            return (\n                <section className=\"container y-offerings p-3 p-md-5\">\n                    <h1 className=\"text-center\"> {listTitle || 'Books You Should Read'}</h1>\n                    <div className=\"card-group\">\n                        {\n                            loadedLis.length? loadedLis: \n                            <p className=\"text-center\"> :) There are no books at the moment</p>\n                        }\n                    </div>\n                </section>\n            )\n\n        }\n    }\n\n}\n","import React from 'react';\nimport { Link, NavLink as RLink, BrowserRouter, Route , Switch} from 'react-router-dom'\nimport { Nav, NavItem, NavLink } from 'reactstrap';\n\nimport UploadForm from '../../pageComponents/dashboard/UploadForm';\nimport BookList from '../../pageComponents/Books/BooksList';\nimport {GET_USER_BOOKS} from '../../apollo/queries/books'\n\nexport default function NavVertical({ match }) {\n    //{`${match.url}/${id}`}\n    const routes = [\n        {\n            path: `${match.url}/upload`,\n            exact: true,\n            sidebar: () => (\n                <div className=\"tab-pane fade show active\" id=\"v-pills-home\" role=\"tabpanel\" aria-labelledby=\"v-pills-home-tab\">\n                    <UploadForm />\n                </div>),\n            main: () => <UploadForm />\n        },\n        {\n            path: `${match.url}/`,\n            exact: true,\n            sidebar: () => (\n                <div className=\"tab-pane fade show active\" id=\"v-pills-profile\" role=\"tabpanel\" aria-labelledby=\"v-pills-profile-tab\">\n                    <BookList listTitle='My Books' listQuery={GET_USER_BOOKS}/>\n                </div>\n            ),\n            main: () => <h2>Bubblegum</h2>\n        }\n    ];\n\n    return (\n        <BrowserRouter>\n            <div className=\"py-3 y-navvertical\">\n                <div className=\"row\">\n\n                    <div className=\"col-3\">\n                        <div className=\"nav flex-column nav-pills\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\n                            <Link to={`${match.url}/upload`} className=\"nav-link active\" id=\"v-pills-home-tab\" data-toggle=\"pill\" href=\"#v-pills-home\"\n                                role=\"tab\" aria-controls=\"v-pills-home\" aria-selected=\"true\">\n                                Upload Book\n                            </Link>\n                            <Link to={`${match.url}/`} className=\"nav-link\" id=\"v-pills-profile-tab\" data-toggle=\"pill\" href=\"#v-pills-profile\"\n                                role=\"tab\" aria-controls=\"v-pills-profile\" aria-selected=\"false\">\n                                My Books\n                            </Link>\n\n                        </div>\n                    </div>\n\n                    {/* <div className=\"col-9\">\n                        <div className=\"tab-content\" id=\"v-pills-tabContent\">\n                            <div className=\"tab-pane fade show active\" id=\"v-pills-home\" role=\"tabpanel\" aria-labelledby=\"v-pills-home-tab\">\n                                <UploadForm />\n                            </div>\n                            <div className=\"tab-pane fade\" id=\"v-pills-profile\" role=\"tabpanel\" aria-labelledby=\"v-pills-profile-tab\">...</div>\n                            <div className=\"tab-pane fade\" id=\"v-pills-messages\" role=\"tabpanel\" aria-labelledby=\"v-pills-messages-tab\">...</div>\n                            <div className=\"tab-pane fade\" id=\"v-pills-settings\" role=\"tabpanel\" aria-labelledby=\"v-pills-settings-tab\">...</div>\n                        </div>\n                    </div> */}\n\n                    <div className=\"col-9\">\n                        <div className=\"tab-content\" id=\"v-pills-tabContent\">\n                            <Switch>\n                                {routes.map((route, index) => (\n                                    <Route\n                                        key={index}\n                                        path={route.path}\n                                        exact={route.exact}\n                                        component={route.sidebar}\n                                    />\n                                ))}\n\n                            </Switch>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </BrowserRouter >\n    )\n}","import React from 'react';\nimport '../styles/main.css';\n\nimport UploadForm from '../pageComponents/dashboard/UploadForm';\nimport Navbar from '../reactStrapComponent/Navbar'\nimport NavVertical from '../pageComponents/dashboard/NavVertical';\n\n\nexport default function Dashboard(props) {\n    if (props.location && props.location.user) {\n        let user = props.location.state.result.fullResult;\n        console.log(`flights: ${JSON.stringify(user, null, 4)}`)\n    }\n\n    return (\n        <>\n            <Navbar />\n            <div className=\"y-dashboard\">\n                <NavVertical match={props.match} />\n\n                {/* <UploadForm /> */}\n            </div>\n        </>\n    )\n}","import React from 'react';\nimport '../styles/main.css';\n\nimport BookList from '../pageComponents/Books/BooksList'\nimport Navbar from '../reactStrapComponent/Navbar'\n\nexport default function Books(props) {\n\n    return (\n        <>\n            <Navbar />\n            <div className=\"y-books\">\n                <BookList />\n            </div>\n\n        </>\n    )\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport {IS_LOGGED_IN} from '../apollo/queries/local'\nimport {SIGN_IN} from '../constants/routes'\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n    const { data } = useQuery(IS_LOGGED_IN);\n\n    return (\n      <Route {...rest} \n        render={ props => data.isLoggedIn ? (<Component {...props} />) : (<Redirect to={{pathname: SIGN_IN} }/>) }\n      />\n    );\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport * as routes from './constants/routes';\nimport Home from './pages/Home';\nimport SignUpPage from './pages/SignUp';\nimport SignInPage from './pages/SignIn';\nimport Dashboard from './pages/Dashboard';\nimport BooksPage from './pages/Books';\n\nimport {PrivateRoute} from './auth/PrivateRoute';\n\n\n// import './styles/settings.css';\n// import './index.css';\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"container-fluid app\">\n                <Route exact path={routes.LANDING} component={Home} />\n                <Route path={routes.SIGN_UP} component={SignUpPage} />\n                <Route path={routes.SIGN_IN} component={SignInPage} />\n                <Route path={routes.BOOKS} component={BooksPage} />\n                <PrivateRoute path={routes.DASHBOARD} component={Dashboard} />\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\n\nimport '../styles/main.css'\n\n// import Navbar from '../reactStrapComponent/Navbar'\nimport Footer from '../pageComponents/Home/Footer';\nimport MainRouter from '../Router';\n\nexport default function MainLayout() {\n    return (\n        <div className=\"main\">\n            {/* <Navbar /> */}\n            <MainRouter />\n            <Footer />\n        </div>\n    )\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport MainLayout from './layouts/Main';\n\n// import './styles/settings.css';\n// import './index.css';\n// import './styles/main.css';\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <MainLayout />\n        </div>\n\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import gql from 'graphql-tag';\n\nexport const typeDefs = gql`\n  extend type Query {\n    isLoggedIn: Boolean!\n    user: [ID!]!\n  }\n\n  extend type User {\n    token: String!\n    fullName: String\n    email: String!\n  }\n\n  extend type Mutation {\n    addOrRemoveUser(id: ID!): [User]\n  }\n`;\n\nexport const resolvers = {};","import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\n\nimport { resolvers, typeDefs } from './resolvers';\n\nimport * as constants from './../constants/localsaves'\n\nconst cache = new InMemoryCache();\n\nconst userStringified = localStorage.getItem(`${constants.APP_NAMESPACE}:user`);\nconsole.log('userStringified: ', userStringified)\nconst userLocal = userStringified ? JSON.parse(userStringified) : {};\nconst { token } = userLocal;\nconsole.log('userLocal: ', userLocal)\nconsole.log('token in configure: ', token);\n\nconst link = new HttpLink({\n    uri: 'http://localhost:4000/graphql',\n    headers: {\n        authorization: token ? `Bearer ${token}` : null\n    },\n})\n\ncache.writeData({\n    data: {\n        isLoggedIn: !!token,\n        user: userLocal,\n    },\n});\n\nconst client = new ApolloClient({\n    cache,\n    link,\n    typeDefs,\n    resolvers\n})\n\nconsole.log('client: ', client);\n\nexport default {\n    client\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from '@apollo/react-hooks'; //'react-apollo'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport apollo from './apollo/configure';\n\nReactDOM.render(\n    <ApolloProvider client={apollo.client}>\n        <App />\n    </ApolloProvider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/hqwordsLogo.10c71f2a.png\";","module.exports = __webpack_public_path__ + \"static/media/hqwords-coffee-h570.5c78992b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hqwords-books-571.776c816d.jpg\";"],"sourceRoot":""}